{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/andersson/\\xC1rea de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import PropTypes from'prop-types';import{useState}from'react';import{Modal,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faClipboardCheck}from'@fortawesome/free-solid-svg-icons';function ConcluirTarefa(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),exibirModal=_useState2[0],setExibirModal=_useState2[1];function handleAbrirModal(event){/**Impede que atualiza a tela */event.preventDefault();setExibirModal(true);}function handleFecharModal(event){setExibirModal(false);}function handleConcluirTarefa(event){event.preventDefault();var tarefasDb=localStorage['tarefas'];var tarefas=tarefasDb?JSON.parse(tarefasDb):[];tarefas=tarefas.map(function(tarefa){if(tarefa.id===props.tarefa.id){tarefa.concluida=true;}return tarefa;});localStorage['tarefas']=JSON.stringify(tarefas);setExibirModal(false);props.recarregarTarefas(true);}return/*#__PURE__*/_jsxs(\"span\",{className:props.className,children:[/*#__PURE__*/_jsx(Button,{className:\"btn-sm\",onClick:handleAbrirModal,\"data-testid\":\"btn-abrir-modal\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faClipboardCheck})}),/*#__PURE__*/_jsxs(Modal,{show:exibirModal,onHide:handleFecharModal,\"data-testid\":\"modal\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Concluir tarefa\"})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[\"Deseja realmente concluir a seguinte tarefa?\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:props.tarefa.nome})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleConcluirTarefa,\"data-testid\":\"btn-concluir\",children:\"Sim\"}),/*#__PURE__*/_jsx(Button,{variant:\"light\",onClick:handleFecharModal,\"data-testid\":\"btn-fechar-modal\",children:\"N\\xE3o\"})]})]})]});}ConcluirTarefa.prototype={tarefa:PropTypes.object.isRequired,recarregarTarefas:PropTypes.func.isRequired,/*Define se elemento vai ser exibido */className:PropTypes.string};export default ConcluirTarefa;","map":{"version":3,"sources":["/home/andersson/Área de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/src/listar/concluir-tarefa.js"],"names":["PropTypes","useState","Modal","Button","FontAwesomeIcon","faClipboardCheck","ConcluirTarefa","props","exibirModal","setExibirModal","handleAbrirModal","event","preventDefault","handleFecharModal","handleConcluirTarefa","tarefasDb","localStorage","tarefas","JSON","parse","map","tarefa","id","concluida","stringify","recarregarTarefas","className","nome","prototype","object","isRequired","func","string"],"mappings":"kSAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,iBAA9B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,gBAAT,KAAiC,mCAAjC,CAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA8B,eAEYN,QAAQ,CAAC,KAAD,CAFpB,wCAEnBO,WAFmB,eAENC,cAFM,eAI1B,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAgC,CAC5B,gCACAA,KAAK,CAACC,cAAN,GACAH,cAAc,CAAC,IAAD,CAAd,CACH,CAED,QAASI,CAAAA,iBAAT,CAA2BF,KAA3B,CAAiC,CAC5BF,cAAc,CAAC,KAAD,CAAd,CACJ,CAED,QAASK,CAAAA,oBAAT,CAA8BH,KAA9B,CAAoC,CAChCA,KAAK,CAACC,cAAN,GACA,GAAMG,CAAAA,SAAS,CAAGC,YAAY,CAAC,SAAD,CAA9B,CACA,GAAIC,CAAAA,OAAO,CAAGF,SAAS,CAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,CAA2B,EAAlD,CACAE,OAAO,CAAGA,OAAO,CAACG,GAAR,CAAY,SAAAC,MAAM,CAAI,CAC5B,GAAGA,MAAM,CAACC,EAAP,GAAcf,KAAK,CAACc,MAAN,CAAaC,EAA9B,CAAiC,CAC7BD,MAAM,CAACE,SAAP,CAAmB,IAAnB,CACH,CACD,MAAOF,CAAAA,MAAP,CACH,CALS,CAAV,CAMAL,YAAY,CAAC,SAAD,CAAZ,CAA0BE,IAAI,CAACM,SAAL,CAAeP,OAAf,CAA1B,CACAR,cAAc,CAAC,KAAD,CAAd,CACAF,KAAK,CAACkB,iBAAN,CAAwB,IAAxB,EACH,CAED,mBACI,cAAM,SAAS,CAAElB,KAAK,CAACmB,SAAvB,wBACI,KAAC,MAAD,EAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEhB,gBAApC,CAAsD,cAAY,iBAAlE,uBACE,KAAC,eAAD,EAAiB,IAAI,CAAEL,gBAAvB,EADF,EADJ,cAII,MAAC,KAAD,EAAO,IAAI,CAAEG,WAAb,CAA0B,MAAM,CAAEK,iBAAlC,CAAqD,cAAY,OAAjE,wBACI,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,uBACI,KAAC,KAAD,CAAO,KAAP,8BADJ,EADJ,cAMI,MAAC,KAAD,CAAO,IAAP,wEAEI,aAFJ,cAGE,wBAASN,KAAK,CAACc,MAAN,CAAaM,IAAtB,EAHF,GANJ,cAWI,MAAC,KAAD,CAAO,MAAP,yBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAEb,oBAAnC,CAAyD,cAAY,cAArE,iBADJ,cAII,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,OAAO,CAAED,iBAAjC,CAAoD,cAAY,kBAAhE,oBAJJ,GAXJ,GAJJ,GADJ,CA4BH,CAEDP,cAAc,CAACsB,SAAf,CAA2B,CACvBP,MAAM,CAAErB,SAAS,CAAC6B,MAAV,CAAiBC,UADF,CAEvBL,iBAAiB,CAAEzB,SAAS,CAAC+B,IAAV,CAAeD,UAFX,CAIvB,uCACAJ,SAAS,CAAE1B,SAAS,CAACgC,MALE,CAA3B,CASA,cAAe1B,CAAAA,cAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\n\nfunction ConcluirTarefa(props){\n\n    const [exibirModal, setExibirModal] = useState(false);\n \n    function handleAbrirModal(event){\n        /**Impede que atualiza a tela */\n        event.preventDefault();\n        setExibirModal(true);\n    }\n\n    function handleFecharModal(event){\n         setExibirModal(false);\n    }\n\n    function handleConcluirTarefa(event){\n        event.preventDefault();\n        const tarefasDb = localStorage['tarefas'];\n        let tarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\n        tarefas = tarefas.map(tarefa => {\n            if(tarefa.id === props.tarefa.id){\n                tarefa.concluida = true;\n            }\n            return tarefa;\n        });\n        localStorage['tarefas'] = JSON.stringify(tarefas);\n        setExibirModal(false);\n        props.recarregarTarefas(true);\n    }\n\n    return(\n        <span className={props.className}>\n            <Button className=\"btn-sm\" onClick={handleAbrirModal} data-testid=\"btn-abrir-modal\">\n              <FontAwesomeIcon icon={faClipboardCheck} />    \n            </Button> \n            <Modal show={exibirModal} onHide={handleFecharModal} data-testid=\"modal\">\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Concluir tarefa\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Deseja realmente concluir a seguinte tarefa?\n                    <br />\n                  <strong>{props.tarefa.nome}</strong>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleConcluirTarefa} data-testid=\"btn-concluir\">\n                        Sim\n                    </Button>\n                    <Button variant=\"light\" onClick={handleFecharModal} data-testid=\"btn-fechar-modal\">\n                        Não\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </span>\n    );\n\n}\n\nConcluirTarefa.prototype = {\n    tarefa: PropTypes.object.isRequired,\n    recarregarTarefas: PropTypes.func.isRequired,\n\n    /*Define se elemento vai ser exibido */\n    className: PropTypes.string\n}\n\n\nexport default ConcluirTarefa;"]},"metadata":{},"sourceType":"module"}