{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/andersson/\\xC1rea de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/src/atualizar/atualizar-tarefa.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter';\nimport axios from 'axios';\nimport Tarefa from '../models/tarefa.model';\n\nfunction AtualizarTarefa(props) {\n  _s();\n\n  const API_URL_ATUALIZAR_TAREFAS = 'http://localhost:3001/gerenciador-tarefas/';\n  const [tarefa, setTarefa] = useState('');\n  const [exibirModal, setExibirModal] = useState(false);\n  const [formValidado, setFormValidado] = useState(false);\n  const [carregarTarefa, setCarregarTarefa] = useState(true);\n  const [exibirModalErro, setExibirModalErro] = useState(false);\n  useEffect(() => {\n    async function obterTarefa() {\n      try {\n        let {\n          data\n        } = await axios.get(`${API_URL_ATUALIZAR_TAREFAS}${props.id}`);\n        setTarefa(data.nome);\n      } catch (err) {\n        navigate('/');\n      }\n    }\n\n    if (carregarTarefa) {\n      obterTarefa();\n      setCarregarTarefa(false);\n    }\n  }, [carregarTarefa, props]);\n\n  function voltar(event) {\n    event.preventDefault();\n    navigate('/');\n  }\n\n  function handleFecharModal() {\n    navigate('/');\n  }\n\n  function handleFecharModalErro() {\n    setExibirModalErro(false);\n  }\n\n  async function atualizar(event) {\n    event.preventDefault();\n    setFormValidado(true);\n    setExibirModal(true);\n\n    if (event.currentTarget.checkValidity() === true) {\n      try {\n        const tarefaAtualizar = new Tarefa(null, tarefa, false);\n        await axios.put(API_URL_ATUALIZAR_TAREFAS + props.id, tarefaAtualizar);\n        setExibirModal(true);\n      } catch (err) {\n        setExibirModalErro(true);\n      }\n    }\n  }\n\n  function handleTxtTarefa(event) {\n    setTarefa(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Atualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: atualizar,\n        noValidate: true,\n        validated: formValidado,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Digite a tarefa\",\n            minLength: \"5\",\n            maxLength: \"100\",\n            required: true,\n            \"data-testid\": \"txt-tarefa\",\n            onChange: handleTxtTarefa,\n            value: tarefa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"A tarefa deve conter ao menos 3 caracteres.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            \"data-testid\": \"btn-atualizar\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(A, {\n            href: \"/\",\n            className: \"btn btn-light\",\n            onClick: voltar,\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibirModal,\n        onHide: handleFecharModal,\n        \"data-testid\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Sucesso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          \"data-testid\": \"modal-body\",\n          children: \"Tarefa Atualizada com sucesso!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: handleFecharModal,\n            children: \"Continuar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibirModalErro,\n        onHide: handleFecharModalErro,\n        \"data-testid\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Erro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          \"data-testid\": \"modal-body\",\n          children: \"Erro ao tentar Atualizar tarefa. Tente novamente.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: handleFecharModalErro,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AtualizarTarefa, \"VbpCWa953lXvmbtZzB1l0no7xE8=\");\n\n_c = AtualizarTarefa;\nAtualizarTarefa.propTypes = {\n  id: PropTypes.string.isRequired\n};\nexport default AtualizarTarefa;\n\nvar _c;\n\n$RefreshReg$(_c, \"AtualizarTarefa\");","map":{"version":3,"sources":["/home/andersson/√Årea de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/src/atualizar/atualizar-tarefa.js"],"names":["useState","useEffect","PropTypes","Button","Form","Jumbotron","Modal","navigate","A","axios","Tarefa","AtualizarTarefa","props","API_URL_ATUALIZAR_TAREFAS","tarefa","setTarefa","exibirModal","setExibirModal","formValidado","setFormValidado","carregarTarefa","setCarregarTarefa","exibirModalErro","setExibirModalErro","obterTarefa","data","get","id","nome","err","voltar","event","preventDefault","handleFecharModal","handleFecharModalErro","atualizar","currentTarget","checkValidity","tarefaAtualizar","put","handleTxtTarefa","target","value","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter'; \nimport axios from 'axios';\nimport Tarefa from '../models/tarefa.model';\n\nfunction AtualizarTarefa(props){\n\n    const API_URL_ATUALIZAR_TAREFAS = 'http://localhost:3001/gerenciador-tarefas/';\n\n    const [tarefa, setTarefa] = useState('');\n    const [exibirModal, setExibirModal] = useState(false);\n    const [formValidado, setFormValidado] = useState(false);\n    const [carregarTarefa, setCarregarTarefa] = useState(true);\n    const [exibirModalErro, setExibirModalErro] = useState(false);\n\n     useEffect(() => {\n        async function obterTarefa() {\n            try {\n                let { data } = await axios.get(`${API_URL_ATUALIZAR_TAREFAS}${props.id}`);\n                setTarefa(data.nome);\n            } catch(err) {\n                navigate('/');\n            }\n        }\n\n        if(carregarTarefa) {          \n            obterTarefa();\n            setCarregarTarefa(false);   \n        }\n\n    },[carregarTarefa, props]);\n\n    function voltar(event){\n        event.preventDefault();\n        navigate('/');\n    }\n\n    function handleFecharModal(){\n        navigate('/');\n    }\n\n    function handleFecharModalErro(){\n        setExibirModalErro(false);\n    }\n\n    async function atualizar(event){\n        event.preventDefault();\n        setFormValidado(true);\n        setExibirModal(true);\n        if (event.currentTarget.checkValidity() === true) {\n            try {\n                const tarefaAtualizar =  new Tarefa(null, tarefa, false);\n                await axios.put(API_URL_ATUALIZAR_TAREFAS + props.id, tarefaAtualizar);\n                setExibirModal(true);\n            } catch(err) {\n                setExibirModalErro(true);\n            }\n        }\n    }\n\n    function handleTxtTarefa(event){\n        setTarefa(event.target.value);\n    }\n\n    return (\n        <div>\n            <h3 className=\"text-center\">Atualizar</h3>\n            <Jumbotron>\n                <Form onSubmit={atualizar} noValidate validated={formValidado}>\n                    <Form.Group>\n                        <Form.Label>Tarefa</Form.Label>\n                        <Form.Control\n                           type=\"text\"\n                           placeholder=\"Digite a tarefa\"\n                           minLength=\"5\"\n                           maxLength=\"100\"\n                           required\n                           data-testid=\"txt-tarefa\" \n                           onChange={handleTxtTarefa}\n                           value={tarefa} />\n                        <Form.Control.Feedback type=\"invalid\"> \n                             A tarefa deve conter ao menos 3 caracteres.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group className=\"text-center\">\n                    <Button\n                        variant=\"success\"\n                        type=\"submit\"\n                        data-testid=\"btn-atualizar\">Atualizar\n                        </Button>\n                        &nbsp;\n                        <A href=\"/\" className=\"btn btn-light\" onClick={voltar}>Voltar</A>\n                    </Form.Group>\n                </Form>\n                <Modal show={exibirModal} onHide={handleFecharModal}  data-testid=\"modal\" >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Sucesso</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body  data-testid=\"modal-body\" >\n                        Tarefa Atualizada com sucesso!\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button \n                        variant=\"success\"\n                        onClick={handleFecharModal}\n                        >\n                           Continuar\n                        </Button>\n                    </Modal.Footer>\n                </Modal> \n\n                <Modal show={exibirModalErro} onHide={handleFecharModalErro}  data-testid=\"modal\" >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Erro</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body  data-testid=\"modal-body\" >\n                        Erro ao tentar Atualizar tarefa. Tente novamente.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button \n                        variant=\"warning\"\n                        onClick={handleFecharModalErro}\n                        >\n                           Fechar\n                        </Button>\n                    </Modal.Footer>\n                </Modal>   \n            </Jumbotron>\n        </div>\n    )\n}\n\nAtualizarTarefa.propTypes = {\n    id: PropTypes.string.isRequired\n}\n\nexport default AtualizarTarefa;"]},"metadata":{},"sourceType":"module"}