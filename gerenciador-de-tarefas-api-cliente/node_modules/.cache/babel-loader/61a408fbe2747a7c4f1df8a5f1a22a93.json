{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/andersson/\\xC1rea de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{Button,Form,Jumbotron,Modal}from'react-bootstrap';import{navigate,A}from'hookrouter';function AtualizarTarefa(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tarefa=_useState2[0],setTarefa=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),exibirModal=_useState4[0],setExibirModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),formValidado=_useState6[0],setFormValidado=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),carregarTarefa=_useState8[0],setCarregarTarefa=_useState8[1];useEffect(function(){if(carregarTarefa){var tarefasDb=localStorage['tarefas'];var tarefas=tarefasDb?JSON.parse(tarefasDb):[];var _tarefa=tarefas.filter(function(t){return t.id===parseInt(props.id);})[0];setTarefa(_tarefa.nome);setCarregarTarefa(false);}},[carregarTarefa,props]);function voltar(event){event.preventDefault();navigate('/');}function handleFecharModal(){navigate('/');}function atualizar(event){event.preventDefault();setFormValidado(true);setExibirModal(true);if(event.currentTarget.checkValidity()===true){//obtem as tarefas \nvar tarefasDb=localStorage['tarefas'];var tarefas=tarefasDb?JSON.parse(tarefasDb):[];//persiste a tarefa\ntarefas=tarefas.map(function(tarefaObj){if(tarefaObj.id===parseInt(props.id)){tarefaObj.nome=tarefa;}return tarefaObj;});localStorage['tarefas']=JSON.stringify(tarefas);setExibirModal(true);}}function handleTxtTarefa(event){setTarefa(event.target.value);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-center\",children:\"Atualizar\"}),/*#__PURE__*/_jsxs(Jumbotron,{children:[/*#__PURE__*/_jsxs(Form,{onSubmit:atualizar,noValidate:true,validated:formValidado,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Tarefa\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Digite a tarefa\",minLength:\"5\",maxLength:\"100\",required:true,\"data-testid\":\"txt-tarefa\",onChange:handleTxtTarefa,value:tarefa}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"A tarefa deve conter ao menos 3 caracteres.\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",type:\"submit\",\"data-testid\":\"btn-atualizar\",children:\"Atualizar\"}),\"\\xA0\",/*#__PURE__*/_jsx(A,{href:\"/\",className:\"btn btn-light\",onClick:voltar,children:\"Voltar\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:exibirModal,onHide:handleFecharModal,\"data-testid\":\"modal\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Sucesso\"})}),/*#__PURE__*/_jsx(Modal.Body,{\"data-testid\":\"modal-body\",children:\"Tarefa Atualizada com sucesso!\"}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:handleFecharModal,children:\"Continuar\"})})]})]})]});}export default AtualizarTarefa;","map":{"version":3,"sources":["/home/andersson/Área de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/src/atualizar/atualizar-tarefa.js"],"names":["useState","useEffect","Button","Form","Jumbotron","Modal","navigate","A","AtualizarTarefa","props","tarefa","setTarefa","exibirModal","setExibirModal","formValidado","setFormValidado","carregarTarefa","setCarregarTarefa","tarefasDb","localStorage","tarefas","JSON","parse","filter","t","id","parseInt","nome","voltar","event","preventDefault","handleFecharModal","atualizar","currentTarget","checkValidity","map","tarefaObj","stringify","handleTxtTarefa","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter'; \n\nfunction AtualizarTarefa(props){\n\n    const [tarefa, setTarefa] = useState('');\n    const [exibirModal, setExibirModal] = useState(false);\n    const [formValidado, setFormValidado] = useState(false);\n    const [carregarTarefa, setCarregarTarefa] = useState(true);\n\n    useEffect(() => {\n        if(carregarTarefa) {\n            const tarefasDb = localStorage['tarefas'];\n            const tarefas = tarefasDb ? JSON.parse(tarefasDb) : []; \n            const tarefa = tarefas.filter(\n                t => t.id === parseInt(props.id)\n            )[0];\n\n            setTarefa(tarefa.nome);    \n            setCarregarTarefa(false);   \n        }\n\n    },[carregarTarefa, props]);\n\n    function voltar(event){\n        event.preventDefault();\n        navigate('/');\n    }\n\n    function handleFecharModal(){\n        navigate('/');\n    }\n\n    function atualizar(event){\n        event.preventDefault();\n        setFormValidado(true);\n        setExibirModal(true);\n        if (event.currentTarget.checkValidity() === true) {\n            //obtem as tarefas \n            const tarefasDb = localStorage['tarefas'];\n            let tarefas = tarefasDb ? JSON.parse(tarefasDb) : []; \n  \n            //persiste a tarefa\n            tarefas = tarefas.map(tarefaObj => {\n              if(tarefaObj.id === parseInt(props.id)){\n                  tarefaObj.nome = tarefa;\n              }   \n              return tarefaObj;\n            });\n            localStorage['tarefas'] = JSON.stringify(tarefas);\n            setExibirModal(true);\n        }\n    }\n\n    function handleTxtTarefa(event){\n        setTarefa(event.target.value);\n    }\n\n    return (\n        <div>\n            <h3 className=\"text-center\">Atualizar</h3>\n            <Jumbotron>\n                <Form onSubmit={atualizar} noValidate validated={formValidado}>\n                    <Form.Group>\n                        <Form.Label>Tarefa</Form.Label>\n                        <Form.Control\n                           type=\"text\"\n                           placeholder=\"Digite a tarefa\"\n                           minLength=\"5\"\n                           maxLength=\"100\"\n                           required\n                           data-testid=\"txt-tarefa\" \n                           onChange={handleTxtTarefa}\n                           value={tarefa} />\n                        <Form.Control.Feedback type=\"invalid\"> \n                             A tarefa deve conter ao menos 3 caracteres.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group className=\"text-center\">\n                    <Button\n                        variant=\"success\"\n                        type=\"submit\"\n                        data-testid=\"btn-atualizar\">Atualizar\n                        </Button>\n                        &nbsp;\n                        <A href=\"/\" className=\"btn btn-light\" onClick={voltar}>Voltar</A>\n                    </Form.Group>\n                </Form>\n                <Modal show={exibirModal} onHide={handleFecharModal}  data-testid=\"modal\" >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Sucesso</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body  data-testid=\"modal-body\" >\n                        Tarefa Atualizada com sucesso!\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button \n                        variant=\"success\"\n                        onClick={handleFecharModal}\n                        >\n                           Continuar\n                        </Button>\n                    </Modal.Footer>\n                </Modal> \n            </Jumbotron>\n        </div>\n    )\n}\n\nAtualizarTarefa.propTypes = {\n    id: PropTypes.number.isRequired\n}\n\nexport default AtualizarTarefa;"]},"metadata":{},"sourceType":"module"}