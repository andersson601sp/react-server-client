{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/andersson/\\xC1rea de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/src/listar/concluir-tarefa.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\nimport Tarefa from '../models/tarefa.model';\nimport axios from 'axios';\n\nfunction ConcluirTarefa(props) {\n  _s();\n\n  const API_URL_CONCLUIR_TAREFAS = 'http://localhost:3001/gerenciador-tarefas/:id/concluir';\n  const [exibirModal, setExibirModal] = useState(false);\n  const [exibirModalErro, setExibirModalErro] = useState(false);\n\n  function handleAbrirModal(event) {\n    /**Impede que atualiza a tela */\n    event.preventDefault();\n    setExibirModal(true);\n  }\n\n  function handleFecharModal(event) {\n    setExibirModal(false);\n  }\n\n  function handleFecharModalErro(event) {\n    setExibirModalErro(false);\n  }\n\n  async function handleConcluirTarefa(event) {\n    event.preventDefault();\n\n    try {\n      await axios.put(API_URL_CONCLUIR_TAREFAS.replace(':id', props.tarefa.id));\n      setExibirModal(false);\n      props.recarregarTarefas(true);\n    } catch (err) {\n      setExibirModal(false);\n      setExibirModalErro(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-sm\",\n      onClick: handleAbrirModal,\n      \"data-testid\": \"btn-abrir-modal\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faClipboardCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: exibirModal,\n      onHide: handleFecharModal,\n      \"data-testid\": \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Concluir tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\"Deseja realmente concluir a seguinte tarefa?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: props.tarefa.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleConcluirTarefa,\n          \"data-testid\": \"btn-concluir\",\n          children: \"Sim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: handleFecharModal,\n          \"data-testid\": \"btn-fechar-modal\",\n          children: \"N\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: exibirModalErro,\n      onHide: handleFecharModalErro,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Erro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Erro ao Concluir Tarefa. Tente Novamente.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: handleFecharModalErro,\n          children: \"Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConcluirTarefa, \"xN0Q0LkpcAwodNreBreSz4JyDhQ=\");\n\n_c = ConcluirTarefa;\nConcluirTarefa.prototype = {\n  tarefa: PropTypes.object.isRequired,\n  recarregarTarefas: PropTypes.func.isRequired,\n\n  /*Define se elemento vai ser exibido */\n  className: PropTypes.string\n};\nexport default ConcluirTarefa;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConcluirTarefa\");","map":{"version":3,"sources":["/home/andersson/√Årea de Trabalho/cursos/react/gerenciador-de-tarefas-api-cliente/src/listar/concluir-tarefa.js"],"names":["PropTypes","useState","Modal","Button","FontAwesomeIcon","faClipboardCheck","Tarefa","axios","ConcluirTarefa","props","API_URL_CONCLUIR_TAREFAS","exibirModal","setExibirModal","exibirModalErro","setExibirModalErro","handleAbrirModal","event","preventDefault","handleFecharModal","handleFecharModalErro","handleConcluirTarefa","put","replace","tarefa","id","recarregarTarefas","err","className","nome","prototype","object","isRequired","func","string"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAE1B,QAAMC,wBAAwB,GAAG,wDAAjC;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,KAAD,CAAtD;;AAEA,WAASc,gBAAT,CAA0BC,KAA1B,EAAgC;AAC5B;AACAA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAED,WAASM,iBAAT,CAA2BF,KAA3B,EAAiC;AAC5BJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACJ;;AAED,WAASO,qBAAT,CAA+BH,KAA/B,EAAqC;AACjCF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACJ;;AAEA,iBAAeM,oBAAf,CAAoCJ,KAApC,EAA0C;AACtCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACA,YAAMV,KAAK,CAACc,GAAN,CAAUX,wBAAwB,CAACY,OAAzB,CAAiC,KAAjC,EAAwCb,KAAK,CAACc,MAAN,CAAaC,EAArD,CAAV,CAAN;AACAZ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAH,MAAAA,KAAK,CAACgB,iBAAN,CAAwB,IAAxB;AACH,KAJD,CAIC,OAAMC,GAAN,EAAW;AACRd,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH;AACJ;;AAED,sBACI;AAAM,IAAA,SAAS,EAAEL,KAAK,CAACkB,SAAvB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEZ,gBAApC;AAAsD,qBAAY,iBAAlE;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEV;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEM,WAAb;AAA0B,MAAA,MAAM,EAAEO,iBAAlC;AAAqD,qBAAY,OAAjE;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD,CAAO,IAAP;AAAA,gFAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGE;AAAA,oBAAST,KAAK,CAACc,MAAN,CAAaK;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,KAAD,CAAO,MAAP;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAER,oBAAnC;AAAyD,yBAAY,cAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,OAAhB;AAAwB,UAAA,OAAO,EAAEF,iBAAjC;AAAoD,yBAAY,kBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAyBI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEL,eAAb;AAA8B,MAAA,MAAM,EAAEM,qBAAtC;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEA,qBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GA5EQX,c;;KAAAA,c;AA8ETA,cAAc,CAACqB,SAAf,GAA2B;AACvBN,EAAAA,MAAM,EAAEvB,SAAS,CAAC8B,MAAV,CAAiBC,UADF;AAEvBN,EAAAA,iBAAiB,EAAEzB,SAAS,CAACgC,IAAV,CAAeD,UAFX;;AAIvB;AACAJ,EAAAA,SAAS,EAAE3B,SAAS,CAACiC;AALE,CAA3B;AASA,eAAezB,cAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\nimport Tarefa from '../models/tarefa.model';\nimport axios from 'axios'\n\nfunction ConcluirTarefa(props){\n\n    const API_URL_CONCLUIR_TAREFAS = 'http://localhost:3001/gerenciador-tarefas/:id/concluir';\n\n    const [exibirModal, setExibirModal] = useState(false);\n    const [exibirModalErro, setExibirModalErro] = useState(false);\n \n    function handleAbrirModal(event){\n        /**Impede que atualiza a tela */\n        event.preventDefault();\n        setExibirModal(true);\n    }\n\n    function handleFecharModal(event){\n         setExibirModal(false);\n    }\n\n    function handleFecharModalErro(event){\n        setExibirModalErro(false);\n   }\n\n    async function handleConcluirTarefa(event){\n        event.preventDefault();\n\n        try {\n            await axios.put(API_URL_CONCLUIR_TAREFAS.replace(':id', props.tarefa.id));\n            setExibirModal(false);\n            props.recarregarTarefas(true);\n        }catch(err) {\n            setExibirModal(false);\n            setExibirModalErro(false);\n        }\n    }\n\n    return(\n        <span className={props.className}>\n            <Button className=\"btn-sm\" onClick={handleAbrirModal} data-testid=\"btn-abrir-modal\">\n              <FontAwesomeIcon icon={faClipboardCheck} />    \n            </Button> \n            <Modal show={exibirModal} onHide={handleFecharModal} data-testid=\"modal\">\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Concluir tarefa\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Deseja realmente concluir a seguinte tarefa?\n                    <br />\n                  <strong>{props.tarefa.nome}</strong>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleConcluirTarefa} data-testid=\"btn-concluir\">\n                        Sim\n                    </Button>\n                    <Button variant=\"light\" onClick={handleFecharModal} data-testid=\"btn-fechar-modal\">\n                        N√£o\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={exibirModalErro} onHide={handleFecharModalErro}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Erro</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Erro ao Concluir Tarefa. Tente Novamente.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"warning\" onClick={handleFecharModalErro}>\n                        Fechar\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </span>\n    );\n\n}\n\nConcluirTarefa.prototype = {\n    tarefa: PropTypes.object.isRequired,\n    recarregarTarefas: PropTypes.func.isRequired,\n\n    /*Define se elemento vai ser exibido */\n    className: PropTypes.string\n}\n\n\nexport default ConcluirTarefa;"]},"metadata":{},"sourceType":"module"}